package it.auties.compiler.tree;

public enum TreeType {
    UNKNOWN,
    EMPTY,
    ERRONEOUS,

    MODULE,
    EXPORTS,
    OPENS,
    PROVIDES,
    REQUIRES,
    USES,
    SOURCE_FILE,
    PACKAGE,
    IMPORT,
    CLASS,
    INTERFACE,
    ENUM,
    RECORD,
    METHOD,
    BODY,
    VARIABLE,
    DO,
    WHILE,
    FOR,
    FOR_EACH,
    LABEL,
    SWITCH,
    CASE,
    SWITCH_EXPRESSION, //FIXME: Review
    SYNCHRONIZED,
    TRY,
    CATCH,
    BINARY_EXPRESSION,
    LET_EXPRESSION, // FIXME: WTF
    IF,
    EXPRESSION_INVOCATION, //FIXME: Review
    BREAK,
    YIELD,
    CONTINUE,
    RETURN,
    THROW,
    ASSERT,
    INSTANCE_OF,
    BINDING_PATTERN,
    CAST,

    ASSIGNMENT,
    CLASS_INITIALIZATION,
    ARRAY_INITIALIZATION,
    METHOD_INVOCATION,
    CALL_ON_FIELD,
    CALL_ON_MEMBER,
    ARRAY_INDEXED_CALL,
    LAMBDA,
    PARENTHESIZED_SUB_EXPRESSION, //FIXME: Review

    IDENTIFIER,
    LITERAL,
    IDENTIFIER_TYPE,
    ARRAY_TYPE,
    GENERIC_TYPE,
    UNION_TYPE,
    INTERSECTION_TYPE,
    TYPE_PARAMETER,
    WILDCARD,
    BOUND,
    ANNOTATION,
    TYPE_ANNOTATION, //FIXME: Review
    MODIFIER,
    ANNOTATED_TYPE,

    PLUS_OPERATOR,
    MINUS_OPERATOR,
    MULTIPLICATION_OPERATOR,
    DIVISION_OPERATOR,
    MODULO_OPERATOR,
    NOT_OPERATOR,
    COMPLEMENTARY_OPERATOR,
    PRE_INCREMENT_OPERATOR,
    POST_INCREMENT_OPERATOR,
    PRE_DECREMENT_OPERATOR,
    POST_DECREMENT_OPERATOR,
    NULL_CHECK_OPERATOR,
    OR_OPERATOR,
    AND_OPERATOR,
    OR_BITWISE_OPERATOR,
    XOR_BITWISE_OPERATOR,
    AND_BITWISE_OPERATOR,
    EQUAL_OPERATOR,
    NOT_EQUAL_OPERATOR,
    LESS_OPERATOR,
    GREATER_OPERATOR,
    LESS_OR_EQUAL_OPERATOR,
    GREATER_OR_EQUAL_OPERATOR,
    SHIFT_LEFT_OPERATOR,
    SHIFT_RIGHT_OPERATOR,
    SHIFT_RIGHT_BITWISE_OPERATOR,

    PLUS_ASSIGNMENT_OPERATOR,
    MINUS_ASSIGNMENT_OPERATOR,
    MULTIPLICATION_ASSIGNMENT_OPERATOR,
    DIVISION_ASSIGNMENT_OPERATOR,
    MODULO_ASSIGNMENT_OPERATOR,
    COMPLEMENTARY_ASSIGNMENT_OPERATOR,
    OR_BITWISE_ASSIGNMENT_OPERATOR,
    XOR_BITWISE_ASSIGNMENT_OPERATOR,
    AND_BITWISE_ASSIGNMENT_OPERATOR,
    SHIFT_LEFT_ASSIGNMENT_OPERATOR,
    SHIFT_RIGHT_ASSIGNMENT_OPERATOR,
    SHIFT_RIGHT_BITWISE_ASSIGNMENT_OPERATOR;
}